name: CI

on: [push]

jobs:
  check-formatting-and-metadata:

    runs-on: ubuntu-22.04

    steps:

    - uses: actions/checkout@v3
      
    - name: 'Install Stack'
      uses: haskell/actions/setup@v2
      with:
        stack-setup-ghc: true
        enable-stack: true

    - name: 'Check formatting'
      uses: mrkkrp/ormolu-action@v9

    - name: 'Check package metadata'
      run: cabal check


  build:

    runs-on: ubuntu-22.04

    steps:

    - run: sudo apt-get update && sudo apt-get install --assume-yes libsdl2-dev libglew-dev

    - uses: actions/checkout@v3

    - uses: actions/cache@v3
      with:
        key: stack
        path: ~/.stack
    
    - uses: actions/cache@v3
      with:
        key: stack-work
        path: .stack-work
  
    - uses: haskell/actions/setup@v2
      with:
        stack-setup-ghc: true
        enable-stack: true
    - run: stack test

  package:

    needs: [check-formatting-and-metadata, build]

    runs-on: ubuntu-22.04

    steps:

    - uses: actions/checkout@v3
      
    - name: 'Install Stack'
      uses: haskell/actions/setup@v2
      with:
        stack-setup-ghc: true
        enable-stack: true
    
    - name: 'Generate Package'
      run: stack sdist

    - name: 'Archive Package'
      uses: actions/upload-artifact@v3
      with:
        name: package
        path: .stack-work/dist/*/*/monomer-flatpak-example-*.tar.gz
        if-no-files-found: error
    
    - name: 'Publish Package to Hackage'
      environment:
        name: hackage
        url: https://hackage.haskell.org/package/monomer-flatpak-example
      run: cabal sdist | tail -n 1 | xargs cabal upload -u "$HACKAGE_USERNAME" -p "$HACKAGE_PASSWORD"
      env:
        HACKAGE_USERNAME: ${{ secrets.HACKAGE_USERNAME }}
        HACKAGE_PASSWORD: ${{ secrets.HACKAGE_USERNAME }}